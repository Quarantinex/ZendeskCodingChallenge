{"ast":null,"code":"var _jsxFileName = \"/Users/quarantinex/Desktop/UTD/Zendesk/ticketviewer/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport \"./styles.css\";\nimport { Container, Navbar, Spinner } from \"react-bootstrap\";\nimport zen from \"./Zen.png\"; // export default class App extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             offset: 0,\n//             data: [],\n//             perPage: 25,\n//             currentPage: 0,\n//             DataisLoaded: false\n//         };\n//         this.handlePageClick = this.handlePageClick.bind(this);\n//     }\n//     receivedData() {\n//         axios\n//             .get(`https://cors-anywhere.herokuapp.com/https://zccabhishek98.zendesk.com/api/v2/requests.json`, {mode:'cors' ,headers: {'Authorization': `Basic YXhuMjAwMDYyQHV0ZGFsbGFzLmVkdS90b2tlbjpsVjNkcURBaG1NUXRadG4yaHR3a1JWY1g0cXhRdDRCUGlUUEY3aXVR`}})\n//             .then(res => {\n//\n//                 const data = res.data;\n//                 const tmp = data.requests;\n//                 const slice = tmp.slice(this.state.offset, this.state.offset + this.state.perPage)\n//                 const postData = slice.map(pd => <React.Fragment>\n//                     id: {pd.id} <br />\n//                     url: {pd.url} <br />\n//                     status: {pd.status} <br />\n//                     subject: {pd.subject} <br />\n//                     <br />\n//                 </React.Fragment>)\n//\n//                 this.setState({\n//                     DataisLoaded: true,\n//                     pageCount: Math.ceil(tmp.length / this.state.perPage),\n//                     postData\n//                 })\n//             });\n//     }\n//     handlePageClick = (e) => {\n//         const selectedPage = e.selected;\n//         const offset = selectedPage * this.state.perPage;\n//\n//         this.setState({\n//             currentPage: selectedPage,\n//             offset: offset\n//         }, () => {\n//             this.receivedData()\n//         });\n//\n//     };\n//\n//     componentDidMount() {\n//\n//         this.receivedData()\n//     }\n//     render() {\n//         if (!this.state.DataisLoaded) return (\n//           <>\n//           <Navbar bg=\"dark\" variant=\"dark\">\n//               <Container>\n//                   <Navbar.Brand>\n//                       <img\n//                           alt=\"\"\n//                           src={zen}\n//                           width=\"40\"\n//                           height=\"40\"\n//                           className=\"d-inline-block align-content-between\"\n//                       />{'  '}\n//                       Zendesk Coding Challenge\n//                   </Navbar.Brand>\n//               </Container>\n//           </Navbar>\n//           <div style={{display: 'flex', justifyContent: 'center'}}>\n//               <Spinner animation=\"border\">\n//                   <span className=\"visually-hidden\">Tickets are being fetched</span>\n//               </Spinner>\n//           </div>\n//           </>\n//       )\n//         return (\n//             <>\n//             <Navbar bg=\"dark\" variant=\"dark\">\n//                 <Container>\n//                     <Navbar.Brand>\n//                         <img\n//                             alt=\"\"\n//                             src={zen}\n//                             width=\"40\"\n//                             height=\"40\"\n//                             className=\"d-inline-block align-content-between\"\n//                         />{'  '}\n//                         Zendesk Coding Challenge\n//                     </Navbar.Brand>\n//                 </Container>\n//             </Navbar>\n//             <div>\n//                 {this.state.postData}\n//                 <ReactPaginate\n//                     previousLabel={\"prev\"}\n//                     nextLabel={\"next\"}\n//                     breakLabel={\"...\"}\n//                     breakClassName={\"break-me\"}\n//                     pageCount={this.state.pageCount}\n//                     marginPagesDisplayed={2}\n//                     pageRangeDisplayed={5}\n//                     onPageChange={this.handlePageClick}\n//                     containerClassName={\"pagination\"}\n//                     subContainerClassName={\"pages pagination\"}\n//                     activeClassName={\"active\"}/>\n//             </div>\n//             </>\n//         )\n//     }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class App extends React.Component {\n  // Constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      DataisLoaded: false,\n      offset: 0,\n      perPage: 5,\n      currentPage: 0\n    };\n  } // ComponentDidMount is used to\n  // execute the cod\n\n\n  componentDidMount() {\n    fetch('https://cors-anywhere.herokuapp.com/https://zccabhishek98.zendesk.com/api/v2/requests.json', {\n      mode: 'cors',\n      headers: {\n        'Authorization': `Basic YXhuMjAwMDYyQHV0ZGFsbGFzLmVkdS90b2tlbjpsVjNkcURBaG1NUXRadG4yaHR3a1JWY1g0cXhRdDRCUGlUUEY3aXVR`\n      }\n    }).then(async response => {\n      const data = await response.json(); // check for error response\n\n      if (!response.ok) {\n        // get error message from body or default to response statusText\n        const error = data && data.message || response.statusText;\n        return Promise.reject(error);\n      }\n\n      this.setState({\n        items: data.requests,\n        DataisLoaded: true\n      });\n    }).catch(error => {\n      this.setState({\n        errorMessage: error.toString()\n      });\n      console.error('There was an error!', error);\n      alert('There was an error!' + error);\n    }); // fetch(\n    //   \"https://zccabhishek98.zendesk.com/api/v2/requests.json\")\n    //   .then((res) => res.json())\n    //   .then((json) => {\n    //     this.setState({\n    //       items: json,\n    //       DataisLoaded: true\n    //     });\n    //   })\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      items\n    } = this.state;\n    if (!DataisLoaded) return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"\",\n              src: zen,\n              width: \"40\",\n              height: \"40\",\n              className: \"d-inline-block align-content-between\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 23\n            }, this), '  ', \"Zendesk Coding Challenge\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Tickets are being fetched\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        bg: \"dark\",\n        variant: \"dark\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"\",\n              src: zen,\n              width: \"40\",\n              height: \"40\",\n              className: \"d-inline-block align-content-between\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 27\n            }, this), '  ', \"Zendesk Coding Challenge\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: items.map(x => /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\"id: \", x.id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 38\n          }, this), \"url: \", x.url, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 40\n          }, this), \"status: \", x.status, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 46\n          }, this), \"subject: \", x.subject, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/quarantinex/Desktop/UTD/Zendesk/ticketviewer/src/App.js"],"names":["React","Component","axios","ReactPaginate","Container","Navbar","Spinner","zen","App","constructor","props","state","items","DataisLoaded","offset","perPage","currentPage","componentDidMount","fetch","mode","headers","then","response","data","json","ok","error","message","statusText","Promise","reject","setState","requests","catch","errorMessage","toString","console","alert","render","display","justifyContent","map","x","id","url","status","subject"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport \"./styles.css\";\nimport {Container, Navbar, Spinner} from \"react-bootstrap\";\nimport zen from \"./Zen.png\";\n\n// export default class App extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             offset: 0,\n//             data: [],\n//             perPage: 25,\n//             currentPage: 0,\n//             DataisLoaded: false\n//         };\n//         this.handlePageClick = this.handlePageClick.bind(this);\n//     }\n//     receivedData() {\n//         axios\n//             .get(`https://cors-anywhere.herokuapp.com/https://zccabhishek98.zendesk.com/api/v2/requests.json`, {mode:'cors' ,headers: {'Authorization': `Basic YXhuMjAwMDYyQHV0ZGFsbGFzLmVkdS90b2tlbjpsVjNkcURBaG1NUXRadG4yaHR3a1JWY1g0cXhRdDRCUGlUUEY3aXVR`}})\n//             .then(res => {\n//\n//                 const data = res.data;\n//                 const tmp = data.requests;\n//                 const slice = tmp.slice(this.state.offset, this.state.offset + this.state.perPage)\n//                 const postData = slice.map(pd => <React.Fragment>\n//                     id: {pd.id} <br />\n//                     url: {pd.url} <br />\n//                     status: {pd.status} <br />\n//                     subject: {pd.subject} <br />\n//                     <br />\n//                 </React.Fragment>)\n//\n//                 this.setState({\n//                     DataisLoaded: true,\n//                     pageCount: Math.ceil(tmp.length / this.state.perPage),\n//                     postData\n//                 })\n//             });\n//     }\n//     handlePageClick = (e) => {\n//         const selectedPage = e.selected;\n//         const offset = selectedPage * this.state.perPage;\n//\n//         this.setState({\n//             currentPage: selectedPage,\n//             offset: offset\n//         }, () => {\n//             this.receivedData()\n//         });\n//\n//     };\n//\n//     componentDidMount() {\n//\n//         this.receivedData()\n//     }\n//     render() {\n//         if (!this.state.DataisLoaded) return (\n//           <>\n//           <Navbar bg=\"dark\" variant=\"dark\">\n//               <Container>\n//                   <Navbar.Brand>\n//                       <img\n//                           alt=\"\"\n//                           src={zen}\n//                           width=\"40\"\n//                           height=\"40\"\n//                           className=\"d-inline-block align-content-between\"\n//                       />{'  '}\n//                       Zendesk Coding Challenge\n//                   </Navbar.Brand>\n//               </Container>\n//           </Navbar>\n//           <div style={{display: 'flex', justifyContent: 'center'}}>\n//               <Spinner animation=\"border\">\n//                   <span className=\"visually-hidden\">Tickets are being fetched</span>\n//               </Spinner>\n//           </div>\n//           </>\n//       )\n//         return (\n//             <>\n//             <Navbar bg=\"dark\" variant=\"dark\">\n//                 <Container>\n//                     <Navbar.Brand>\n//                         <img\n//                             alt=\"\"\n//                             src={zen}\n//                             width=\"40\"\n//                             height=\"40\"\n//                             className=\"d-inline-block align-content-between\"\n//                         />{'  '}\n//                         Zendesk Coding Challenge\n//                     </Navbar.Brand>\n//                 </Container>\n//             </Navbar>\n//             <div>\n//                 {this.state.postData}\n//                 <ReactPaginate\n//                     previousLabel={\"prev\"}\n//                     nextLabel={\"next\"}\n//                     breakLabel={\"...\"}\n//                     breakClassName={\"break-me\"}\n//                     pageCount={this.state.pageCount}\n//                     marginPagesDisplayed={2}\n//                     pageRangeDisplayed={5}\n//                     onPageChange={this.handlePageClick}\n//                     containerClassName={\"pagination\"}\n//                     subContainerClassName={\"pages pagination\"}\n//                     activeClassName={\"active\"}/>\n//             </div>\n//             </>\n//         )\n//     }\n// }\n\n\nexport default class App extends React.Component {\n\n  // Constructor\n  constructor(props) {\n    super(props);\n\n    this.state = {\n        items: [],\n        DataisLoaded: false,\n        offset: 0,\n        perPage: 5,\n        currentPage: 0\n    };\n  }\n\n\n  // ComponentDidMount is used to\n  // execute the cod\n  componentDidMount() {\n\n      fetch('https://cors-anywhere.herokuapp.com/https://zccabhishek98.zendesk.com/api/v2/requests.json', {mode:'cors' ,headers: {'Authorization': `Basic YXhuMjAwMDYyQHV0ZGFsbGFzLmVkdS90b2tlbjpsVjNkcURBaG1NUXRadG4yaHR3a1JWY1g0cXhRdDRCUGlUUEY3aXVR`}})\n          .then(async response => {\n              const data = await response.json();\n\n              // check for error response\n              if (!response.ok) {\n                  // get error message from body or default to response statusText\n                  const error = (data && data.message) || response.statusText;\n                  return Promise.reject(error);\n              }\n\n              this.setState({ items: data.requests , DataisLoaded: true})\n          })\n          .catch(error => {\n              this.setState({ errorMessage: error.toString() });\n              console.error('There was an error!', error);\n              alert('There was an error!' + error);\n          });\n\n\n\n      // fetch(\n      //   \"https://zccabhishek98.zendesk.com/api/v2/requests.json\")\n      //   .then((res) => res.json())\n      //   .then((json) => {\n      //     this.setState({\n      //       items: json,\n      //       DataisLoaded: true\n      //     });\n      //   })\n  }\n  render() {\n      const { DataisLoaded, items } = this.state;\n      if (!DataisLoaded) return (\n          <>\n          <Navbar bg=\"dark\" variant=\"dark\">\n              <Container>\n                  <Navbar.Brand>\n                      <img\n                          alt=\"\"\n                          src={zen}\n                          width=\"40\"\n                          height=\"40\"\n                          className=\"d-inline-block align-content-between\"\n                      />{'  '}\n                      Zendesk Coding Challenge\n                  </Navbar.Brand>\n              </Container>\n          </Navbar>\n          <div style={{display: 'flex', justifyContent: 'center'}}>\n              <Spinner animation=\"border\">\n                  <span className=\"visually-hidden\">Tickets are being fetched</span>\n              </Spinner>\n          </div>\n          </>\n      )\n      return (\n          <>\n              <Navbar bg=\"dark\" variant=\"dark\">\n                  <Container>\n                      <Navbar.Brand>\n                          <img\n                              alt=\"\"\n                              src={zen}\n                              width=\"40\"\n                              height=\"40\"\n                              className=\"d-inline-block align-content-between\"\n                          />{'  '}\n                          Zendesk Coding Challenge\n                      </Navbar.Brand>\n                  </Container>\n              </Navbar>\n          <ul>\n              { items.map((x) =>\n                  (\n                      <ul>\n                          id: {x.id} <br />\n                          url: {x.url} <br />\n                          status: {x.status} <br />\n                          subject: {x.subject} <br />\n                          <br />\n                      </ul>\n                  )\n              ) }\n          </ul>\n         </>\n      )\n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}